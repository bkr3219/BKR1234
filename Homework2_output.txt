// =============================Exercise Part A=========================================

// creating a db 
<switched to db _employees_

// list all dbs
<sample_mflix  111.61 MiB
test          184.00 KiB
admin         364.00 KiB
local           6.98 GiB

// Drop Database
<{ ok: 1, dropped: 'tutorial' }

// =================================Exercise Part B=====================================


// 1- Create db, show dbs, add collection, drop db,  before and after

// create and switch to new db
<switched to db _temporary_
// create new collection
<{ ok: 1 }
// show list of dbs
<_temporary_     8.00 KiB
sample_mflix  111.61 MiB
test          184.00 KiB
admin         364.00 KiB
local           6.98 GiB
// show list of collections
<_test_
// drop db
<{ ok: 1, dropped: '_temporary_' }
// show list of dbs after
<sample_mflix  111.61 MiB
test          184.00 KiB
admin         364.00 KiB
local           6.98 GiB
// show list of collections after
<

// 2- Create multiple collections using distinct department names in the database created in **exercise Part A**
<switched to db _employees_
<{ ok: 1 }
<{ ok: 1 }
<{ ok: 1 }


// 3- List all the collections in the current database
<_employees_    24.00 KiB
sample_mflix  111.61 MiB
test          184.00 KiB
admin         364.00 KiB
local           6.98 GiB


// ========================Exercise Part C=============================

// 1- Insert some employee documents with fields(employeeid, name, salary) in the multiple collections created in the previuos exercise.
<{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('662657950ddcd3288d72622a')
  }
}
<{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('662658040ddcd3288d72622b')
  }
}
<{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('6626584f0ddcd3288d72622c')
  }
}

// 2- Use the find command to retrieve all the entered data.
<{
  _id: ObjectId('662657950ddcd3288d72622a'),
  employeeid: 1,
  name: 'John Parker',
  salary: 70000
}
<{
  _id: ObjectId('662658040ddcd3288d72622b'),
  employeeid: 1,
  name: 'Leo Sam',
  salary: 100000
}
<{
  _id: ObjectId('6626584f0ddcd3288d72622c'),
  employeeid: 1,
  name: 'Auon Aoun',
  salary: 85000
}


// ========================Exercise Part D=============================

// 1.  Add the follwoing employees to any collection:
<{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('6627300b35efd9f054604c16')
  }
}
<{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('6627302a35efd9f054604c17')
  }
}
<{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('6627304135efd9f054604c18')
  }
}

// 2. Find 2 documents using the field name **employeeid**
<{
  _id: ObjectId('6627302a35efd9f054604c17'),
  employeeid: 2455,
  name: 'Syed',
  salary: 90000
}
<{
  _id: ObjectId('6627300b35efd9f054604c16'),
  employeeid: 1187,
  name: 'John Steight',
  salary: 75000
}

// 3. Find 2 documents using the field name **name**
<{
  _id: ObjectId('6627302a35efd9f054604c17'),
  employeeid: 2455,
  name: 'Syed',
  salary: 90000
}
<{
  _id: ObjectId('6627304135efd9f054604c18'),
  employeeid: 24113,
  name: 'Wright John',
  salary: 65000
}

// 4. Find all the documents where the name field starts with John
<{
  _id: ObjectId('662657950ddcd3288d72622a'),
  employeeid: 1,
  name: 'John Parker',
  salary: 70000
}
{
  _id: ObjectId('6627300b35efd9f054604c16'),
  employeeid: 1187,
  name: 'John Steight',
  salary: 75000
}

// 5. Find all the documents where the name filed contains John
<{
  _id: ObjectId('662657950ddcd3288d72622a'),
  employeeid: 1,
  name: 'John Parker',
  salary: 70000
}
{
  _id: ObjectId('6627300b35efd9f054604c16'),
  employeeid: 1187,
  name: 'John Steight',
  salary: 75000
}
{
  _id: ObjectId('6627304135efd9f054604c18'),
  employeeid: 24113,
  name: 'Wright John',
  salary: 65000
}